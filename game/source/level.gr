
export func initLevel() {
    var scene = @Scene;
    scene.name = "level";
    @Level.addScene(scene);

    var tilemap = @Tilemap("level1");
    var map = @Entity;
    map.addImage(tilemap);
    scene.addEntity(map);

    var tileSize = tilemap.tileSize;
    var width = tilemap.width;
    var height = tilemap.height;

    print(tileSize.x);

    loop(y, height) {
        loop(x, width) {
            var tileId = tilemap.getTile(x, y);

            if(tileId == 0) {
                var solid = @Solid;
                solid.position = @Vec2i(x * tileSize.x as<int>, y * tileSize.y as<int>);
                solid.hitbox = @Vec2i(16, 16);
                scene.addSolid(solid);
            }
        }
    }

    haniwa("mayumi", 0, 0, true);
    haniwa("saki", 30, -100, false);
    haniwa("seija", 50, -100, false);
}



func initInput() {
    @Input.addAction("up");
    @Input.addAction("down");
    @Input.addAction("left");
    @Input.addAction("right");
    @Input.addAction("jump");
    @Input.addAction("restart");
    
    @Input.addActionEvent("up", @InputEvent.keyButton(KeyButton.up, KeyState.pressed));
    @Input.addActionEvent("down", @InputEvent.keyButton(KeyButton.down, KeyState.pressed));
    @Input.addActionEvent("left", @InputEvent.keyButton(KeyButton.left, KeyState.pressed));
    @Input.addActionEvent("right", @InputEvent.keyButton(KeyButton.right, KeyState.pressed));
    @Input.addActionEvent("jump", @InputEvent.keyButton(KeyButton.space, KeyState.pressed));
    @Input.addActionEvent("restart", @InputEvent.keyButton(KeyButton.r, KeyState.pressed));
}

task haniwa(name: string, posX: int, posY: int, isPlayer: bool) {
    initInput();

    var scene = @Level.findSceneByName("level")?;

    var startPosition = @Vec2i(posX, posY);

    var player = @Actor;
    player.position = startPosition;
    player.hitbox = @Vec2i(12, 12);
    scene.addActor(player);

    var entity = @Entity;
    scene.addEntity(entity);
    player.entity = entity;

    var sprite = @Sprite(name);
    sprite.position = @Vec2f(0, -4);
    entity.addImage(sprite);

    var speedX: float;
    var speedY: float;
    var isOnGround: bool;

    loop yield {
        if (isPlayer) {
            speedX = approach(speedX, @Input.getActionAxis("left", "right") * 3f, 0.5f);
        } else {
            speedX = approach(speedX, 1f, 0.5f);
        }

        speedY = approach(speedY, 5f, 0.5f);

        if (@Input.isActionActivated("restart")) {
            player.position = startPosition;
        }

        if (isOnGround) {
            if (isPlayer && @Input.isActionActivated("jump")) {
                player.dismount();
                isOnGround = false;
                speedY = -10f;
            }
        }

        var collision = player.moveX(speedX);
        if (collision) {
        }

        var collision = player.moveY(speedY);
        if (collision) {
            var collision = collision?;
            if (collision.direction.y > 0) {
                isOnGround = true;
                player.mount(collision.solid);
            } else {
                isOnGround = false;
            }

            if (collision.direction.y < 0) {
                speedY = 0f;
            }
        }
    }
}